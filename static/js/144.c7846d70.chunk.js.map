{"version":3,"file":"static/js/144.c7846d70.chunk.js","mappings":"8SAAaA,EAAU,mCCGvBC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cDFE,6NCGFA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,OAA0C,mBAEnC,IAAMC,EAAsB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACbV,EAAAA,EAAAA,IAAU,8BAADW,OAA+BZ,IAAW,KAAD,EAA7D,OAA6DO,EAAAE,EAAAI,KAAjEL,EAAID,EAAJC,KAAIC,EAAAK,OAAA,SACLN,GAAI,wBAAAC,EAAAM,OAAA,GAAAT,EAAA,KACZ,kBAHkC,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAKtBC,EAAgB,eAAAC,GAAAf,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAe,EAAMC,GAAK,IAAAC,EAAAd,EAAA,OAAAH,IAAAA,MAAA,SAAAkB,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EAClBV,EAAAA,EAAAA,IAAU,sBAADW,OACRS,EAAK,aAAAT,OAAYZ,IACvC,KAAD,EAFW,OAEXsB,EAAAC,EAAAV,KAFOL,EAAIc,EAAJd,KAAIe,EAAAT,OAAA,SAGLN,GAAI,wBAAAe,EAAAR,OAAA,GAAAK,EAAA,KACZ,gBAL4BI,GAAA,OAAAL,EAAAH,MAAA,KAAAC,UAAA,KAOhBQ,EAAY,eAAAC,GAAAtB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAsB,EAAMC,GAAO,IAAAC,EAAArB,EAAA,OAAAH,IAAAA,MAAA,SAAAyB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EAChBV,EAAAA,EAAAA,IAAU,SAADW,OAAUgB,EAAO,aAAAhB,OAAYZ,IAAW,KAAD,EAA3D,OAA2D6B,EAAAC,EAAAjB,KAA/DL,EAAIqB,EAAJrB,KAAIsB,EAAAhB,OAAA,SACLN,GAAI,wBAAAsB,EAAAf,OAAA,GAAAY,EAAA,KACZ,gBAHwBI,GAAA,OAAAL,EAAAV,MAAA,KAAAC,UAAA,KAKZe,EAAmB,eAAAC,GAAA7B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA6B,EAAMN,GAAO,IAAAO,EAAA3B,EAAA,OAAAH,IAAAA,MAAA,SAAA+B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACvBV,EAAAA,EAAAA,IAAU,SAADW,OACrBgB,EAAO,qBAAAhB,OAAoBZ,IACpC,KAAD,EAFW,OAEXmC,EAAAC,EAAAvB,KAFOL,EAAI2B,EAAJ3B,KAAI4B,EAAAtB,OAAA,SAGLN,GAAI,wBAAA4B,EAAArB,OAAA,GAAAmB,EAAA,KACZ,gBAL+BG,GAAA,OAAAJ,EAAAjB,MAAA,KAAAC,UAAA,KAOnBqB,EAAmB,eAAAC,GAAAnC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAmC,EAAMZ,GAAO,IAAAa,EAAAjC,EAAA,OAAAH,IAAAA,MAAA,SAAAqC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,cAAA+B,EAAA/B,KAAA,EACvBV,EAAAA,EAAAA,IAAU,SAADW,OACrBgB,EAAO,qBAAAhB,OAAoBZ,IACpC,KAAD,EAFW,OAEXyC,EAAAC,EAAA7B,KAFOL,EAAIiC,EAAJjC,KAAIkC,EAAA5B,OAAA,SAGLN,GAAI,wBAAAkC,EAAA3B,OAAA,GAAAyB,EAAA,KACZ,gBAL+BG,GAAA,OAAAJ,EAAAvB,MAAA,KAAAC,UAAA,I,gHC5BjB,SAAS2B,EAAkBC,GACxC,IAAQjB,GAAYkB,EAAAA,EAAAA,MAAZlB,QACRmB,GAAkCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAQ9B,OANAI,EAAAA,EAAAA,YAAU,YACR,eAAAC,GAAAlD,EAAAA,EAAAA,GAAAC,IAAAA,MAAC,SAAAC,IAAA,OAAAD,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACa,OADbF,EAAA8C,GACCH,EAAY3C,EAAAE,KAAA,EAAOkC,EAAGjB,GAAQ,OAAAnB,EAAA+C,GAAA/C,EAAAI,MAAA,EAAAJ,EAAA8C,IAAA9C,EAAA+C,IAAE,KAAF,mBAAA/C,EAAAM,OAAA,GAAAT,EAAE,KADR,OAEzB,WAFyB,OAAAgD,EAAAtC,MAAC,KAADC,UAAA,EAA1B,IAGF,GAAG,CAACW,EAASiB,IAENM,CACT,C,qICiBA,MA5BA,SAAahD,GAAgB,IAAbsD,EAAQtD,EAARsD,SACd,OAAKA,GAAqC,IAAzBA,EAASC,KAAKC,QAS7BC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iBAAgBC,SAC3BL,EAASC,KAAKK,KAAI,SAAAC,GAAM,OACvBC,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKM,KAWMC,EAXWH,EAAOI,aAY9BD,EAAI,kCAAAvD,OAAqCuD,GAASE,GAZLC,IAAKN,EAAOO,QACxDN,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACEG,EAAAA,EAAAA,MAAA,KAAAH,SAAA,CAAG,IAAEE,EAAOO,SACZN,EAAAA,EAAAA,MAAA,KAAAH,SAAA,CAAG,IAAC,cAAAlD,OAAeoD,EAAOQ,mBAJrBR,EAAOS,IAYxB,IAAqBN,CANR,OAfPP,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oBAAmBC,UAC/BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,UAASC,SAAC,gCAkBhC,E,iBCfA,MANA,WACE,IAAML,GAAWb,EAAAA,EAAAA,GAAkBZ,EAAAA,IAEnC,OAAOyB,IAAYG,EAAAA,EAAAA,KAACc,EAAI,CAACjB,SAAUA,GACrC,C","sources":["const.js","api/tmdb-api.js","components/Hooks/useFetchMovieData.js","components/Cast/Cast.jsx","pages/CastPage/CastPage.jsx"],"sourcesContent":["export const API_KEY = '0dcb234fd8e808b26c651715f937b217';\nexport const TOKEN_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwZGNiMjM0ZmQ4ZTgwOGIyNmM2NTE3MTVmOTM3YjIxNyIsInN1YiI6IjY1ZGRkZmU0OWFlNjEzMDE4Njc1NmQxMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.n-_bQwkK_NDEzBTsUydX25xzjNKUpXobhWw98wo5CCk';\nexport const PER_PAGE = 12;\n","import axios from 'axios';\nimport { API_KEY, TOKEN_KEY } from 'const';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = TOKEN_KEY;\naxios.defaults.headers.common['accept'] = 'application/json';\n\nexport const getTrendingMoviesToday = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMoviesByTitle = async query => {\n  const { data } = await axios.get(\n    `search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieCreditsById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMovieReviewsById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default function useFetchMovieData(fn) {\n  const { movieId } = useParams();\n  const [fetchData, setFetchData] = useState(null);\n\n  useEffect(() => {\n    (async function fetchMovie() {\n      setFetchData(await fn(movieId));\n    })();\n  }, [movieId, fn]);\n\n  return fetchData;\n}\n","import noUser from 'images/NoUser.jpg';\nimport './Cast.css';\n\nfunction Cast({ castData }) {\n  if (!castData || castData.cast.length === 0) {\n    return (\n      <ul className=\"reviews_container\">\n        <li className=\"no-data\">There isn't any cast data.</li>\n      </ul>\n    );\n  }\n\n  return (\n    <ul className=\"cast-container\">\n      {castData.cast.map(person => (\n        <li key={person.id}>\n          <img src={composePath(person.profile_path)} alt={person.name} />\n          <div>\n            <p> {person.name}</p>\n            <p> {`Character: ${person.character}`}</p>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nfunction composePath(path) {\n  return path ? `https://image.tmdb.org/t/p/w500${path}` : noUser;\n}\n\nexport default Cast;\n","import Cast from 'components/Cast/Cast';\nimport useFetchMovieData from 'components/Hooks/useFetchMovieData';\nimport { getMovieCreditsById } from 'api/tmdb-api';\n\nfunction CastPage() {\n  const castData = useFetchMovieData(getMovieCreditsById);\n\n  return castData && <Cast castData={castData} />;\n}\n\nexport default CastPage;\n"],"names":["API_KEY","axios","getTrendingMoviesToday","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","concat","sent","abrupt","stop","apply","arguments","getMoviesByTitle","_ref2","_callee2","query","_yield$axios$get2","_context2","_x","getMovieById","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","getMovieCreditsById","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getMovieReviewsById","_ref5","_callee5","_yield$axios$get5","_context5","_x4","useFetchMovieData","fn","useParams","_useState","useState","_useState2","_slicedToArray","fetchData","setFetchData","useEffect","_fetchMovie","t0","t1","castData","cast","length","_jsx","className","children","map","person","_jsxs","src","path","profile_path","noUser","alt","name","character","id","Cast"],"sourceRoot":""}